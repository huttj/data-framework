extends layout
block content
  h1= title
  p Welcome to #{title}
  form(action="/#{entity}/#{model.id}" method="POST")
    +parseObject(schema)
    button(type="submit") Save
    input(type="number" value="#{model.id}" name="id")

mixin parseObject(obj)
  div
    - if (obj !== null)
      - each val, key in obj
        - if (typeof val === 'string')
          - if ('-<>='.match(val[0]))
            +makeModelSelector(key, val.substr(1))
          - else
            +makeInput(key, val)
        - else if (val.map)
          +makeInput(key, 'enum', val)
        - else if (typeof val === 'object')
          // h2= util.camelToTitle(key)
          // mixin parseObject(val)

mixin makeInput(label, type, enumVal)
  label(for="#{label}")= label
    - if (type === 'string')
      input(type="text" id="#{label}" name="#{label}" value="#{model[label] || ''}")
    - else if (type === 'number')
      input(type="number" id="#{label}" name="#{label}" value="#{model[label] || ''}")
    - if (type === 'date')
      input(type="date" id="#{label}" name="#{label}" value="#{model[label] || ''}")
    - else if (type === 'enum' && enumVal)
      select(id="#{label}" name="#{label}")
        - each choice in enumVal
          option(value="#{choice}" selected="#{model[label] === choice}")= choice
  br
  
mixin makeModelSelector(label, model)
  label(for="#{label}")= label
    select(id="#{label}" name="#{label}")
      option
      - each choice in modelRefs[model]
        option(value="#{choice.id}" selected="#{model[label] && model[label].id === choice.id}")= choice.Name
  br