extends layout

block content
  .row
    h1
      a(href="/")= title
  .row
    h2 New #{schema.replace(/_/g, ' ')}

  .row
    form(action="/#{schema}/new" method="POST")
      .row
        +parseObject(schemas[schema])
      .pull-right
        a(href="/#{schema}" style="margin-right: .33em").btn.btn-default Cancel
        button(type="submit").btn.btn-primary Submit

mixin parseObject(obj)
  div
    - if (obj !== null)
      - each val, key in obj
        - if (typeof val === 'string')
          - if ('-<>='.match(val[0]))
            +makeModelSelector(key, val.substr(1))
          - else
            +makeInput(key, val)
        - else if (val.map)
          +makeInput(key, 'enum', val)
        - else if (typeof val === 'object')
          // h2= util.camelToTitle(key)
          // mixin parseObject(val)

mixin makeInput(label, type, enumVal)
  .col-lg-3.col-md-4.col-sm-6
    .form-group
      label(for="#{label}")= label
      - if (type === 'string')
        input(type="text" id="#{label}" name="#{label}").form-control
      - else if (type === 'number')
        input(type="number" id="#{label}" name="#{label}").form-control
      - if (type === 'date')
        input(type="date" id="#{label}" name="#{label}").form-control
      - else if (type === 'enum' && enumVal)
        select(id="#{label}" name="#{label}").form-control
          - each choice in enumVal
            option(value="#{choice}")= choice

mixin makeModelSelector(label, model)
  .col-lg-3.col-md-4.col-sm-6
    .form-group
      label(for="#{label}")= label
      select(id="#{label}" name="#{label}").form-control
        option
        - each choice in modelRefs[model]
          option(value="#{choice.id}")= choice.Name